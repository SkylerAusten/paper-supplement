<alloy builddate="Thursday, April 24th, 2025">
<instance bitwidth="4" maxseq="-1" command="temporary-name_file_sharing_paper_trace_1" filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" version="4.2.1" prefixLength="7" loop="6" >

<sig label="seq/Int" ID="0" parentID="1" builtin="yes">
</sig>

<sig label="Int" ID="1" parentID="2" builtin="yes">

</sig>

<sig label="univ" ID="2" builtin="yes">
</sig>

<field label="no-field-guard" ID="3" parentID="2">
<types> <type ID="2"/><type ID="2"/> </types>
</field>

<sig label="Location" ID="4" parentID="2">

</sig>

<sig label="Computer" ID="5" parentID="4">

</sig>

<sig label="AliceComputer" ID="6" parentID="5">
<atom label="AliceComputer0"/>
</sig>

<sig label="Person" ID="7" parentID="2">

</sig>

<sig label="Bob" ID="8" parentID="7">
<atom label="Bob0"/>
</sig>

<sig label="Email" ID="9" parentID="2">

</sig>

<sig label="Item" ID="10" parentID="2">

</sig>

<sig label="File" ID="11" parentID="10">

</sig>

<sig label="BobComputer" ID="12" parentID="5">
<atom label="BobComputer0"/>
</sig>

<sig label="EmailContent" ID="13" parentID="2">

</sig>

<sig label="Attachment" ID="14" parentID="13">

</sig>

<sig label="Text" ID="15" parentID="13">

</sig>

<sig label="Inbox" ID="16" parentID="2">

</sig>

<sig label="AliceInbox" ID="17" parentID="16">
<atom label="AliceInbox0"/>
</sig>

<sig label="EmailServer" ID="18" parentID="4">
<atom label="EmailServer0"/>
</sig>

<sig label="Alice" ID="19" parentID="7">
<atom label="Alice0"/>
</sig>

<sig label="Folder" ID="20" parentID="10">

</sig>

<sig label="Server" ID="21" parentID="7">
<atom label="Server0"/>
</sig>

<sig label="Drive" ID="22" parentID="4">

</sig>

<sig label="AliceDrive" ID="23" parentID="22">
<atom label="AliceDrive0"/>
</sig>

<sig label="BobInbox" ID="24" parentID="16">
<atom label="BobInbox0"/>
</sig>

<sig label="Link" ID="25" parentID="13">

</sig>

<sig label="BobDrive" ID="26" parentID="22">
<atom label="BobDrive0"/>
</sig>

<field label="sent" ID="27" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location" ID="28" parentID="10">
<types><type ID="10"/><type ID="4"/></types>

</field>

<field label="item_owner" ID="29" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="item_creator" ID="30" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="from" ID="31" parentID="9">
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="same_content" ID="32" parentID="11">
<types><type ID="11"/><type ID="11"/></types>

</field>

<field label="to" ID="33" parentID="9">
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="shared_with_me" ID="34" parentID="22">
<types><type ID="22"/><type ID="10"/></types>

</field>

<field label="threads" ID="35" parentID="16">
<types><type ID="16"/><type ID="9"/><type ID="9"/></types>

</field>

<field label="folder_items" ID="36" parentID="20">
<types><type ID="20"/><type ID="11"/></types>

</field>

<field label="drafts" ID="37" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location_owner" ID="38" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobDrive0"/><atom label="Bob0"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobComputer0"/><atom label="Bob0"/></tuple>
<tuple><atom label="EmailServer0"/><atom label="Server0"/></tuple>
<types><type ID="4"/><type ID="7"/></types>

</field>

<field label="inbox_owner" ID="39" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobInbox0"/><atom label="Bob0"/></tuple>
<types><type ID="16"/><type ID="7"/></types>

</field>

<field label="location_items" ID="40" parentID="4">
<types><type ID="4"/><type ID="10"/></types>

</field>

<field label="shared_with" ID="41" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="received" ID="42" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="points_to" ID="43" parentID="25">
<types><type ID="25"/><type ID="10"/></types>

</field>

<field label="attached" ID="44" parentID="14">
<types><type ID="14"/><type ID="10"/></types>

</field>

<field label="email_content" ID="45" parentID="9">
<types><type ID="9"/><type ID="13"/></types>

</field>


</instance>
<instance bitwidth="4" maxseq="-1" command="temporary-name_file_sharing_paper_trace_1" filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" version="4.2.1" prefixLength="7" loop="6" >

<sig label="seq/Int" ID="0" parentID="1" builtin="yes">
</sig>

<sig label="Int" ID="1" parentID="2" builtin="yes">

</sig>

<sig label="univ" ID="2" builtin="yes">
</sig>

<field label="no-field-guard" ID="3" parentID="2">
<types> <type ID="2"/><type ID="2"/> </types>
</field>

<sig label="Location" ID="4" parentID="2">

</sig>

<sig label="Computer" ID="5" parentID="4">

</sig>

<sig label="AliceComputer" ID="6" parentID="5">
<atom label="AliceComputer0"/>
</sig>

<sig label="Person" ID="7" parentID="2">

</sig>

<sig label="Bob" ID="8" parentID="7">
<atom label="Bob0"/>
</sig>

<sig label="Email" ID="9" parentID="2">

</sig>

<sig label="Item" ID="10" parentID="2">

</sig>

<sig label="File" ID="11" parentID="10">
<atom label="Item0"/>
</sig>

<sig label="BobComputer" ID="12" parentID="5">
<atom label="BobComputer0"/>
</sig>

<sig label="EmailContent" ID="13" parentID="2">

</sig>

<sig label="Attachment" ID="14" parentID="13">

</sig>

<sig label="Text" ID="15" parentID="13">

</sig>

<sig label="Inbox" ID="16" parentID="2">

</sig>

<sig label="AliceInbox" ID="17" parentID="16">
<atom label="AliceInbox0"/>
</sig>

<sig label="EmailServer" ID="18" parentID="4">
<atom label="EmailServer0"/>
</sig>

<sig label="Alice" ID="19" parentID="7">
<atom label="Alice0"/>
</sig>

<sig label="Folder" ID="20" parentID="10">

</sig>

<sig label="Server" ID="21" parentID="7">
<atom label="Server0"/>
</sig>

<sig label="Drive" ID="22" parentID="4">

</sig>

<sig label="AliceDrive" ID="23" parentID="22">
<atom label="AliceDrive0"/>
</sig>

<sig label="BobInbox" ID="24" parentID="16">
<atom label="BobInbox0"/>
</sig>

<sig label="Link" ID="25" parentID="13">

</sig>

<sig label="BobDrive" ID="26" parentID="22">
<atom label="BobDrive0"/>
</sig>

<field label="sent" ID="27" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location" ID="28" parentID="10">
<tuple><atom label="Item0"/><atom label="AliceComputer0"/></tuple>
<types><type ID="10"/><type ID="4"/></types>

</field>

<field label="item_owner" ID="29" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="item_creator" ID="30" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="from" ID="31" parentID="9">
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="same_content" ID="32" parentID="11">
<types><type ID="11"/><type ID="11"/></types>

</field>

<field label="to" ID="33" parentID="9">
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="shared_with_me" ID="34" parentID="22">
<types><type ID="22"/><type ID="10"/></types>

</field>

<field label="threads" ID="35" parentID="16">
<types><type ID="16"/><type ID="9"/><type ID="9"/></types>

</field>

<field label="folder_items" ID="36" parentID="20">
<types><type ID="20"/><type ID="11"/></types>

</field>

<field label="drafts" ID="37" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location_owner" ID="38" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobDrive0"/><atom label="Bob0"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobComputer0"/><atom label="Bob0"/></tuple>
<tuple><atom label="EmailServer0"/><atom label="Server0"/></tuple>
<types><type ID="4"/><type ID="7"/></types>

</field>

<field label="inbox_owner" ID="39" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobInbox0"/><atom label="Bob0"/></tuple>
<types><type ID="16"/><type ID="7"/></types>

</field>

<field label="location_items" ID="40" parentID="4">
<tuple><atom label="AliceComputer0"/><atom label="Item0"/></tuple>
<types><type ID="4"/><type ID="10"/></types>

</field>

<field label="shared_with" ID="41" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="received" ID="42" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="points_to" ID="43" parentID="25">
<types><type ID="25"/><type ID="10"/></types>

</field>

<field label="attached" ID="44" parentID="14">
<types><type ID="14"/><type ID="10"/></types>

</field>

<field label="email_content" ID="45" parentID="9">
<types><type ID="9"/><type ID="13"/></types>

</field>


</instance>
<instance bitwidth="4" maxseq="-1" command="temporary-name_file_sharing_paper_trace_1" filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" version="4.2.1" prefixLength="7" loop="6" >

<sig label="seq/Int" ID="0" parentID="1" builtin="yes">
</sig>

<sig label="Int" ID="1" parentID="2" builtin="yes">

</sig>

<sig label="univ" ID="2" builtin="yes">
</sig>

<field label="no-field-guard" ID="3" parentID="2">
<types> <type ID="2"/><type ID="2"/> </types>
</field>

<sig label="Location" ID="4" parentID="2">

</sig>

<sig label="Computer" ID="5" parentID="4">

</sig>

<sig label="AliceComputer" ID="6" parentID="5">
<atom label="AliceComputer0"/>
</sig>

<sig label="Person" ID="7" parentID="2">

</sig>

<sig label="Bob" ID="8" parentID="7">
<atom label="Bob0"/>
</sig>

<sig label="Email" ID="9" parentID="2">

</sig>

<sig label="Item" ID="10" parentID="2">

</sig>

<sig label="File" ID="11" parentID="10">
<atom label="Item0"/><atom label="Item7"/>
</sig>

<sig label="BobComputer" ID="12" parentID="5">
<atom label="BobComputer0"/>
</sig>

<sig label="EmailContent" ID="13" parentID="2">

</sig>

<sig label="Attachment" ID="14" parentID="13">

</sig>

<sig label="Text" ID="15" parentID="13">

</sig>

<sig label="Inbox" ID="16" parentID="2">

</sig>

<sig label="AliceInbox" ID="17" parentID="16">
<atom label="AliceInbox0"/>
</sig>

<sig label="EmailServer" ID="18" parentID="4">
<atom label="EmailServer0"/>
</sig>

<sig label="Alice" ID="19" parentID="7">
<atom label="Alice0"/>
</sig>

<sig label="Folder" ID="20" parentID="10">

</sig>

<sig label="Server" ID="21" parentID="7">
<atom label="Server0"/>
</sig>

<sig label="Drive" ID="22" parentID="4">

</sig>

<sig label="AliceDrive" ID="23" parentID="22">
<atom label="AliceDrive0"/>
</sig>

<sig label="BobInbox" ID="24" parentID="16">
<atom label="BobInbox0"/>
</sig>

<sig label="Link" ID="25" parentID="13">

</sig>

<sig label="BobDrive" ID="26" parentID="22">
<atom label="BobDrive0"/>
</sig>

<field label="sent" ID="27" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location" ID="28" parentID="10">
<tuple><atom label="Item0"/><atom label="AliceComputer0"/></tuple>
<tuple><atom label="Item7"/><atom label="AliceDrive0"/></tuple>
<types><type ID="10"/><type ID="4"/></types>

</field>

<field label="item_owner" ID="29" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="item_creator" ID="30" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="from" ID="31" parentID="9">
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="same_content" ID="32" parentID="11">
<tuple><atom label="Item0"/><atom label="Item7"/></tuple>
<tuple><atom label="Item7"/><atom label="Item0"/></tuple>
<types><type ID="11"/><type ID="11"/></types>

</field>

<field label="to" ID="33" parentID="9">
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="shared_with_me" ID="34" parentID="22">
<types><type ID="22"/><type ID="10"/></types>

</field>

<field label="threads" ID="35" parentID="16">
<types><type ID="16"/><type ID="9"/><type ID="9"/></types>

</field>

<field label="folder_items" ID="36" parentID="20">
<types><type ID="20"/><type ID="11"/></types>

</field>

<field label="drafts" ID="37" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location_owner" ID="38" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobDrive0"/><atom label="Bob0"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobComputer0"/><atom label="Bob0"/></tuple>
<tuple><atom label="EmailServer0"/><atom label="Server0"/></tuple>
<types><type ID="4"/><type ID="7"/></types>

</field>

<field label="inbox_owner" ID="39" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobInbox0"/><atom label="Bob0"/></tuple>
<types><type ID="16"/><type ID="7"/></types>

</field>

<field label="location_items" ID="40" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Item7"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Item0"/></tuple>
<types><type ID="4"/><type ID="10"/></types>

</field>

<field label="shared_with" ID="41" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="received" ID="42" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="points_to" ID="43" parentID="25">
<types><type ID="25"/><type ID="10"/></types>

</field>

<field label="attached" ID="44" parentID="14">
<types><type ID="14"/><type ID="10"/></types>

</field>

<field label="email_content" ID="45" parentID="9">
<types><type ID="9"/><type ID="13"/></types>

</field>


</instance>
<instance bitwidth="4" maxseq="-1" command="temporary-name_file_sharing_paper_trace_1" filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" version="4.2.1" prefixLength="7" loop="6" >

<sig label="seq/Int" ID="0" parentID="1" builtin="yes">
</sig>

<sig label="Int" ID="1" parentID="2" builtin="yes">

</sig>

<sig label="univ" ID="2" builtin="yes">
</sig>

<field label="no-field-guard" ID="3" parentID="2">
<types> <type ID="2"/><type ID="2"/> </types>
</field>

<sig label="Location" ID="4" parentID="2">

</sig>

<sig label="Computer" ID="5" parentID="4">

</sig>

<sig label="AliceComputer" ID="6" parentID="5">
<atom label="AliceComputer0"/>
</sig>

<sig label="Person" ID="7" parentID="2">

</sig>

<sig label="Bob" ID="8" parentID="7">
<atom label="Bob0"/>
</sig>

<sig label="Email" ID="9" parentID="2">
<atom label="Email0"/>
</sig>

<sig label="Item" ID="10" parentID="2">

</sig>

<sig label="File" ID="11" parentID="10">
<atom label="Item0"/><atom label="Item7"/>
</sig>

<sig label="BobComputer" ID="12" parentID="5">
<atom label="BobComputer0"/>
</sig>

<sig label="EmailContent" ID="13" parentID="2">

</sig>

<sig label="Attachment" ID="14" parentID="13">

</sig>

<sig label="Text" ID="15" parentID="13">

</sig>

<sig label="Inbox" ID="16" parentID="2">

</sig>

<sig label="AliceInbox" ID="17" parentID="16">
<atom label="AliceInbox0"/>
</sig>

<sig label="EmailServer" ID="18" parentID="4">
<atom label="EmailServer0"/>
</sig>

<sig label="Alice" ID="19" parentID="7">
<atom label="Alice0"/>
</sig>

<sig label="Folder" ID="20" parentID="10">

</sig>

<sig label="Server" ID="21" parentID="7">
<atom label="Server0"/>
</sig>

<sig label="Drive" ID="22" parentID="4">

</sig>

<sig label="AliceDrive" ID="23" parentID="22">
<atom label="AliceDrive0"/>
</sig>

<sig label="BobInbox" ID="24" parentID="16">
<atom label="BobInbox0"/>
</sig>

<sig label="Link" ID="25" parentID="13">

</sig>

<sig label="BobDrive" ID="26" parentID="22">
<atom label="BobDrive0"/>
</sig>

<field label="sent" ID="27" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location" ID="28" parentID="10">
<tuple><atom label="Item0"/><atom label="AliceComputer0"/></tuple>
<tuple><atom label="Item7"/><atom label="AliceDrive0"/></tuple>
<types><type ID="10"/><type ID="4"/></types>

</field>

<field label="item_owner" ID="29" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="item_creator" ID="30" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="from" ID="31" parentID="9">
<tuple><atom label="Email0"/><atom label="Alice0"/></tuple>
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="same_content" ID="32" parentID="11">
<tuple><atom label="Item0"/><atom label="Item7"/></tuple>
<tuple><atom label="Item7"/><atom label="Item0"/></tuple>
<types><type ID="11"/><type ID="11"/></types>

</field>

<field label="to" ID="33" parentID="9">
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="shared_with_me" ID="34" parentID="22">
<types><type ID="22"/><type ID="10"/></types>

</field>

<field label="threads" ID="35" parentID="16">
<types><type ID="16"/><type ID="9"/><type ID="9"/></types>

</field>

<field label="folder_items" ID="36" parentID="20">
<types><type ID="20"/><type ID="11"/></types>

</field>

<field label="drafts" ID="37" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Email0"/></tuple>
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location_owner" ID="38" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobDrive0"/><atom label="Bob0"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobComputer0"/><atom label="Bob0"/></tuple>
<tuple><atom label="EmailServer0"/><atom label="Server0"/></tuple>
<types><type ID="4"/><type ID="7"/></types>

</field>

<field label="inbox_owner" ID="39" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobInbox0"/><atom label="Bob0"/></tuple>
<types><type ID="16"/><type ID="7"/></types>

</field>

<field label="location_items" ID="40" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Item7"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Item0"/></tuple>
<types><type ID="4"/><type ID="10"/></types>

</field>

<field label="shared_with" ID="41" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="received" ID="42" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="points_to" ID="43" parentID="25">
<types><type ID="25"/><type ID="10"/></types>

</field>

<field label="attached" ID="44" parentID="14">
<types><type ID="14"/><type ID="10"/></types>

</field>

<field label="email_content" ID="45" parentID="9">
<types><type ID="9"/><type ID="13"/></types>

</field>


</instance>
<instance bitwidth="4" maxseq="-1" command="temporary-name_file_sharing_paper_trace_1" filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" version="4.2.1" prefixLength="7" loop="6" >

<sig label="seq/Int" ID="0" parentID="1" builtin="yes">
</sig>

<sig label="Int" ID="1" parentID="2" builtin="yes">

</sig>

<sig label="univ" ID="2" builtin="yes">
</sig>

<field label="no-field-guard" ID="3" parentID="2">
<types> <type ID="2"/><type ID="2"/> </types>
</field>

<sig label="Location" ID="4" parentID="2">

</sig>

<sig label="Computer" ID="5" parentID="4">

</sig>

<sig label="AliceComputer" ID="6" parentID="5">
<atom label="AliceComputer0"/>
</sig>

<sig label="Person" ID="7" parentID="2">

</sig>

<sig label="Bob" ID="8" parentID="7">
<atom label="Bob0"/>
</sig>

<sig label="Email" ID="9" parentID="2">
<atom label="Email0"/>
</sig>

<sig label="Item" ID="10" parentID="2">

</sig>

<sig label="File" ID="11" parentID="10">
<atom label="Item0"/><atom label="Item7"/>
</sig>

<sig label="BobComputer" ID="12" parentID="5">
<atom label="BobComputer0"/>
</sig>

<sig label="EmailContent" ID="13" parentID="2">

</sig>

<sig label="Attachment" ID="14" parentID="13">

</sig>

<sig label="Text" ID="15" parentID="13">

</sig>

<sig label="Inbox" ID="16" parentID="2">

</sig>

<sig label="AliceInbox" ID="17" parentID="16">
<atom label="AliceInbox0"/>
</sig>

<sig label="EmailServer" ID="18" parentID="4">
<atom label="EmailServer0"/>
</sig>

<sig label="Alice" ID="19" parentID="7">
<atom label="Alice0"/>
</sig>

<sig label="Folder" ID="20" parentID="10">

</sig>

<sig label="Server" ID="21" parentID="7">
<atom label="Server0"/>
</sig>

<sig label="Drive" ID="22" parentID="4">

</sig>

<sig label="AliceDrive" ID="23" parentID="22">
<atom label="AliceDrive0"/>
</sig>

<sig label="BobInbox" ID="24" parentID="16">
<atom label="BobInbox0"/>
</sig>

<sig label="Link" ID="25" parentID="13">

</sig>

<sig label="BobDrive" ID="26" parentID="22">
<atom label="BobDrive0"/>
</sig>

<field label="sent" ID="27" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location" ID="28" parentID="10">
<tuple><atom label="Item0"/><atom label="AliceComputer0"/></tuple>
<tuple><atom label="Item7"/><atom label="AliceDrive0"/></tuple>
<types><type ID="10"/><type ID="4"/></types>

</field>

<field label="item_owner" ID="29" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="item_creator" ID="30" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="from" ID="31" parentID="9">
<tuple><atom label="Email0"/><atom label="Alice0"/></tuple>
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="same_content" ID="32" parentID="11">
<tuple><atom label="Item0"/><atom label="Item7"/></tuple>
<tuple><atom label="Item7"/><atom label="Item0"/></tuple>
<types><type ID="11"/><type ID="11"/></types>

</field>

<field label="to" ID="33" parentID="9">
<tuple><atom label="Email0"/><atom label="Bob0"/></tuple>
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="shared_with_me" ID="34" parentID="22">
<types><type ID="22"/><type ID="10"/></types>

</field>

<field label="threads" ID="35" parentID="16">
<types><type ID="16"/><type ID="9"/><type ID="9"/></types>

</field>

<field label="folder_items" ID="36" parentID="20">
<types><type ID="20"/><type ID="11"/></types>

</field>

<field label="drafts" ID="37" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Email0"/></tuple>
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location_owner" ID="38" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobDrive0"/><atom label="Bob0"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobComputer0"/><atom label="Bob0"/></tuple>
<tuple><atom label="EmailServer0"/><atom label="Server0"/></tuple>
<types><type ID="4"/><type ID="7"/></types>

</field>

<field label="inbox_owner" ID="39" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobInbox0"/><atom label="Bob0"/></tuple>
<types><type ID="16"/><type ID="7"/></types>

</field>

<field label="location_items" ID="40" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Item7"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Item0"/></tuple>
<types><type ID="4"/><type ID="10"/></types>

</field>

<field label="shared_with" ID="41" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="received" ID="42" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="points_to" ID="43" parentID="25">
<types><type ID="25"/><type ID="10"/></types>

</field>

<field label="attached" ID="44" parentID="14">
<types><type ID="14"/><type ID="10"/></types>

</field>

<field label="email_content" ID="45" parentID="9">
<types><type ID="9"/><type ID="13"/></types>

</field>


</instance>
<instance bitwidth="4" maxseq="-1" command="temporary-name_file_sharing_paper_trace_1" filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" version="4.2.1" prefixLength="7" loop="6" >

<sig label="seq/Int" ID="0" parentID="1" builtin="yes">
</sig>

<sig label="Int" ID="1" parentID="2" builtin="yes">

</sig>

<sig label="univ" ID="2" builtin="yes">
</sig>

<field label="no-field-guard" ID="3" parentID="2">
<types> <type ID="2"/><type ID="2"/> </types>
</field>

<sig label="Location" ID="4" parentID="2">

</sig>

<sig label="Computer" ID="5" parentID="4">

</sig>

<sig label="AliceComputer" ID="6" parentID="5">
<atom label="AliceComputer0"/>
</sig>

<sig label="Person" ID="7" parentID="2">

</sig>

<sig label="Bob" ID="8" parentID="7">
<atom label="Bob0"/>
</sig>

<sig label="Email" ID="9" parentID="2">
<atom label="Email0"/>
</sig>

<sig label="Item" ID="10" parentID="2">

</sig>

<sig label="File" ID="11" parentID="10">
<atom label="Item0"/><atom label="Item7"/>
</sig>

<sig label="BobComputer" ID="12" parentID="5">
<atom label="BobComputer0"/>
</sig>

<sig label="EmailContent" ID="13" parentID="2">

</sig>

<sig label="Attachment" ID="14" parentID="13">

</sig>

<sig label="Text" ID="15" parentID="13">

</sig>

<sig label="Inbox" ID="16" parentID="2">

</sig>

<sig label="AliceInbox" ID="17" parentID="16">
<atom label="AliceInbox0"/>
</sig>

<sig label="EmailServer" ID="18" parentID="4">
<atom label="EmailServer0"/>
</sig>

<sig label="Alice" ID="19" parentID="7">
<atom label="Alice0"/>
</sig>

<sig label="Folder" ID="20" parentID="10">

</sig>

<sig label="Server" ID="21" parentID="7">
<atom label="Server0"/>
</sig>

<sig label="Drive" ID="22" parentID="4">

</sig>

<sig label="AliceDrive" ID="23" parentID="22">
<atom label="AliceDrive0"/>
</sig>

<sig label="BobInbox" ID="24" parentID="16">
<atom label="BobInbox0"/>
</sig>

<sig label="Link" ID="25" parentID="13">
<atom label="EmailContent1"/>
</sig>

<sig label="BobDrive" ID="26" parentID="22">
<atom label="BobDrive0"/>
</sig>

<field label="sent" ID="27" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location" ID="28" parentID="10">
<tuple><atom label="Item0"/><atom label="AliceComputer0"/></tuple>
<tuple><atom label="Item7"/><atom label="AliceDrive0"/></tuple>
<types><type ID="10"/><type ID="4"/></types>

</field>

<field label="item_owner" ID="29" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="item_creator" ID="30" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="from" ID="31" parentID="9">
<tuple><atom label="Email0"/><atom label="Alice0"/></tuple>
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="same_content" ID="32" parentID="11">
<tuple><atom label="Item0"/><atom label="Item7"/></tuple>
<tuple><atom label="Item7"/><atom label="Item0"/></tuple>
<types><type ID="11"/><type ID="11"/></types>

</field>

<field label="to" ID="33" parentID="9">
<tuple><atom label="Email0"/><atom label="Bob0"/></tuple>
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="shared_with_me" ID="34" parentID="22">
<types><type ID="22"/><type ID="10"/></types>

</field>

<field label="threads" ID="35" parentID="16">
<types><type ID="16"/><type ID="9"/><type ID="9"/></types>

</field>

<field label="folder_items" ID="36" parentID="20">
<types><type ID="20"/><type ID="11"/></types>

</field>

<field label="drafts" ID="37" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Email0"/></tuple>
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location_owner" ID="38" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobDrive0"/><atom label="Bob0"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobComputer0"/><atom label="Bob0"/></tuple>
<tuple><atom label="EmailServer0"/><atom label="Server0"/></tuple>
<types><type ID="4"/><type ID="7"/></types>

</field>

<field label="inbox_owner" ID="39" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobInbox0"/><atom label="Bob0"/></tuple>
<types><type ID="16"/><type ID="7"/></types>

</field>

<field label="location_items" ID="40" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Item7"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Item0"/></tuple>
<types><type ID="4"/><type ID="10"/></types>

</field>

<field label="shared_with" ID="41" parentID="10">
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="received" ID="42" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="points_to" ID="43" parentID="25">
<tuple><atom label="EmailContent1"/><atom label="Item7"/></tuple>
<types><type ID="25"/><type ID="10"/></types>

</field>

<field label="attached" ID="44" parentID="14">
<types><type ID="14"/><type ID="10"/></types>

</field>

<field label="email_content" ID="45" parentID="9">
<tuple><atom label="Email0"/><atom label="EmailContent1"/></tuple>
<types><type ID="9"/><type ID="13"/></types>

</field>


</instance>
<instance bitwidth="4" maxseq="-1" command="temporary-name_file_sharing_paper_trace_1" filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" version="4.2.1" prefixLength="7" loop="6" >

<sig label="seq/Int" ID="0" parentID="1" builtin="yes">
</sig>

<sig label="Int" ID="1" parentID="2" builtin="yes">

</sig>

<sig label="univ" ID="2" builtin="yes">
</sig>

<field label="no-field-guard" ID="3" parentID="2">
<types> <type ID="2"/><type ID="2"/> </types>
</field>

<sig label="Location" ID="4" parentID="2">

</sig>

<sig label="Computer" ID="5" parentID="4">

</sig>

<sig label="AliceComputer" ID="6" parentID="5">
<atom label="AliceComputer0"/>
</sig>

<sig label="Person" ID="7" parentID="2">

</sig>

<sig label="Bob" ID="8" parentID="7">
<atom label="Bob0"/>
</sig>

<sig label="Email" ID="9" parentID="2">
<atom label="Email0"/>
</sig>

<sig label="Item" ID="10" parentID="2">

</sig>

<sig label="File" ID="11" parentID="10">
<atom label="Item0"/><atom label="Item7"/>
</sig>

<sig label="BobComputer" ID="12" parentID="5">
<atom label="BobComputer0"/>
</sig>

<sig label="EmailContent" ID="13" parentID="2">

</sig>

<sig label="Attachment" ID="14" parentID="13">

</sig>

<sig label="Text" ID="15" parentID="13">

</sig>

<sig label="Inbox" ID="16" parentID="2">

</sig>

<sig label="AliceInbox" ID="17" parentID="16">
<atom label="AliceInbox0"/>
</sig>

<sig label="EmailServer" ID="18" parentID="4">
<atom label="EmailServer0"/>
</sig>

<sig label="Alice" ID="19" parentID="7">
<atom label="Alice0"/>
</sig>

<sig label="Folder" ID="20" parentID="10">

</sig>

<sig label="Server" ID="21" parentID="7">
<atom label="Server0"/>
</sig>

<sig label="Drive" ID="22" parentID="4">

</sig>

<sig label="AliceDrive" ID="23" parentID="22">
<atom label="AliceDrive0"/>
</sig>

<sig label="BobInbox" ID="24" parentID="16">
<atom label="BobInbox0"/>
</sig>

<sig label="Link" ID="25" parentID="13">
<atom label="EmailContent1"/>
</sig>

<sig label="BobDrive" ID="26" parentID="22">
<atom label="BobDrive0"/>
</sig>

<field label="sent" ID="27" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Email0"/></tuple>
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location" ID="28" parentID="10">
<tuple><atom label="Item0"/><atom label="AliceComputer0"/></tuple>
<tuple><atom label="Item7"/><atom label="AliceDrive0"/></tuple>
<types><type ID="10"/><type ID="4"/></types>

</field>

<field label="item_owner" ID="29" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="item_creator" ID="30" parentID="10">
<tuple><atom label="Item0"/><atom label="Alice0"/></tuple>
<tuple><atom label="Item7"/><atom label="Alice0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="from" ID="31" parentID="9">
<tuple><atom label="Email0"/><atom label="Alice0"/></tuple>
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="same_content" ID="32" parentID="11">
<tuple><atom label="Item0"/><atom label="Item7"/></tuple>
<tuple><atom label="Item7"/><atom label="Item0"/></tuple>
<types><type ID="11"/><type ID="11"/></types>

</field>

<field label="to" ID="33" parentID="9">
<tuple><atom label="Email0"/><atom label="Bob0"/></tuple>
<types><type ID="9"/><type ID="7"/></types>

</field>

<field label="shared_with_me" ID="34" parentID="22">
<tuple><atom label="BobDrive0"/><atom label="Item7"/></tuple>
<types><type ID="22"/><type ID="10"/></types>

</field>

<field label="threads" ID="35" parentID="16">
<types><type ID="16"/><type ID="9"/><type ID="9"/></types>

</field>

<field label="folder_items" ID="36" parentID="20">
<types><type ID="20"/><type ID="11"/></types>

</field>

<field label="drafts" ID="37" parentID="16">
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="location_owner" ID="38" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobDrive0"/><atom label="Bob0"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobComputer0"/><atom label="Bob0"/></tuple>
<tuple><atom label="EmailServer0"/><atom label="Server0"/></tuple>
<types><type ID="4"/><type ID="7"/></types>

</field>

<field label="inbox_owner" ID="39" parentID="16">
<tuple><atom label="AliceInbox0"/><atom label="Alice0"/></tuple>
<tuple><atom label="BobInbox0"/><atom label="Bob0"/></tuple>
<types><type ID="16"/><type ID="7"/></types>

</field>

<field label="location_items" ID="40" parentID="4">
<tuple><atom label="AliceDrive0"/><atom label="Item7"/></tuple>
<tuple><atom label="AliceComputer0"/><atom label="Item0"/></tuple>
<types><type ID="4"/><type ID="10"/></types>

</field>

<field label="shared_with" ID="41" parentID="10">
<tuple><atom label="Item7"/><atom label="Bob0"/></tuple>
<types><type ID="10"/><type ID="7"/></types>

</field>

<field label="received" ID="42" parentID="16">
<tuple><atom label="BobInbox0"/><atom label="Email0"/></tuple>
<types><type ID="16"/><type ID="9"/></types>

</field>

<field label="points_to" ID="43" parentID="25">
<tuple><atom label="EmailContent1"/><atom label="Item7"/></tuple>
<types><type ID="25"/><type ID="10"/></types>

</field>

<field label="attached" ID="44" parentID="14">
<types><type ID="14"/><type ID="10"/></types>

</field>

<field label="email_content" ID="45" parentID="9">
<tuple><atom label="Email0"/><atom label="EmailContent1"/></tuple>
<types><type ID="9"/><type ID="13"/></types>

</field>


</instance>

<source filename="c:\Users\me\Desktop\GitHub Repos\Sharing-Semantics\file_sharing_paper_trace.frg" content="#lang forge/temporal
&#xA;
&#xA;// Pre-load the vizualization script
&#xA;// option run_sterling &amp;quot;viz.js&amp;quot;
&#xA;
&#xA;-- Trace Length
&#xA;option max_tracelength 8 -- Max Trace Length
&#xA;option min_tracelength 4 -- Min Trace Length
&#xA;
&#xA;-- UNSAT Resolver (uncomment to use)
&#xA;// option solver MiniSatProver
&#xA;// option core_minimization rce
&#xA;// option logtranslation 1
&#xA;// option coregranularity 1
&#xA;
&#xA;------------------------ Sigs ------------------------
&#xA;
&#xA;sig Person {}
&#xA;
&#xA;one sig Alice, Bob, Server extends Person {}
&#xA;
&#xA;abstract sig Location {
&#xA;    var location_owner: one Person,
&#xA;    var location_items: set Item
&#xA;}
&#xA;
&#xA;sig Drive extends Location {
&#xA;    var shared_with_me: set Item
&#xA;}
&#xA;
&#xA;one sig AliceDrive, BobDrive extends Drive {}
&#xA;
&#xA;sig Computer extends Location {}
&#xA;
&#xA;one sig AliceComputer, BobComputer extends Computer {}
&#xA;
&#xA;sig EmailServer extends Location {}
&#xA;
&#xA;var abstract sig Item {
&#xA;    var item_creator: one Person,
&#xA;    var item_owner: one Person,
&#xA;    var location: one Location,
&#xA;    var shared_with: set Person
&#xA;}
&#xA;
&#xA;var sig File extends Item {
&#xA;    var same_content: set File
&#xA;}
&#xA;
&#xA;var sig Folder extends Item {
&#xA;    var folder_items: set File
&#xA;}
&#xA;
&#xA;var abstract sig EmailContent {}
&#xA;
&#xA;var sig Attachment extends EmailContent {
&#xA;    var attached: one Item
&#xA;}
&#xA;
&#xA;var sig Text extends EmailContent {}
&#xA;
&#xA;var sig Link extends EmailContent {
&#xA;    var points_to: one Item
&#xA;}
&#xA;
&#xA;var sig Email {
&#xA;    var from: one Person,
&#xA;    var to: set Person,
&#xA;    var email_content: lone EmailContent
&#xA;}
&#xA;
&#xA;sig Inbox {
&#xA;    var inbox_owner: one Person,
&#xA;    var received: set Email,
&#xA;    var sent: set Email,
&#xA;    var drafts: set Email,
&#xA;    var threads: set Email-&amp;gt;Email
&#xA;}
&#xA;
&#xA;one sig AliceInbox, BobInbox extends Inbox {}
&#xA;
&#xA;------------------------ Constraints ------------------------
&#xA;
&#xA;pred modelProperties {
&#xA;    -- An email in an inbox's drafts implies the email is &amp;quot;from&amp;quot; the inbox owner.
&#xA;    all e: Email, i: Inbox | {e in i.drafts implies e.from = i.inbox_owner}
&#xA;
&#xA;    -- An email in an inbox's sent implies the email is &amp;quot;from&amp;quot; the inbox owner.
&#xA;    all e: Email, i: Inbox | {e in i.sent implies e.from = i.inbox_owner}
&#xA;
&#xA;    -- A file cannot have the same content as itself.
&#xA;    no f: File | f in f.same_content
&#xA;
&#xA;    -- All items specified as being at a given location will be in that location's location_items set.
&#xA;    all l: Location, i: Item | i in l.location_items iff {i.location = l}
&#xA;
&#xA;    -- A item must be in a drive to be shared with someone.
&#xA;    all i: Item | some i.shared_with implies {i.location in Drive}
&#xA;
&#xA;    -- An item cannot be shared with its owner.
&#xA;    no i: Item | i.item_owner in i.shared_with
&#xA;
&#xA;    -- No file can be both in someone's drive &amp; that drive's shared_with_me.
&#xA;    no i: Item, d: Drive | i in d.location_items and i in d.shared_with_me
&#xA;
&#xA;    -- An item's location must have the same location_owner as the item's item_owner.
&#xA;    all f: Item | f.location.location_owner = f.item_owner
&#xA;
&#xA;    -- All items must have the same location as the folder they're in.
&#xA;    all file: File, folder: Folder | file in folder.folder_items implies file.location = folder.location
&#xA;
&#xA;    -- All same_content relations are symmetric.
&#xA;    all disj f1, f2: File | f2 in f1.same_content iff { f1 in f2.same_content }
&#xA;
&#xA;    // -- same_content is transitively closed.
&#xA;    all disj f1, f2: File |
&#xA;		f2 in f1.^same_content implies f2 in f1.same_content
&#xA;
&#xA;    all disj f1, f2, f3: File |
&#xA;        (f1 in f2.same_content and f2 in f3.same_content)
&#xA;        implies f1 in f3.same_content
&#xA;
&#xA;    -- No item can be in more than one folder's items.
&#xA;    no disj f1, f2: Folder, i: Item |
&#xA;        (i in f1.folder_items) and (i in f2.folder_items)
&#xA;
&#xA;    -- No item can be in more than one location's location_items.
&#xA;    no disj l1, l2: Location, i: Item |
&#xA;        (i in l1.location_items) and (i in l2.location_items)
&#xA;
&#xA;    -- An foler cannot be in its own folder_items or any child folders's items.
&#xA;    no f: Folder | f in f.^folder_items
&#xA;
&#xA;    -- One person can only own one computer, one drive, and one inbox.
&#xA;    -- And all computers, drives, and inboxes must be owned.
&#xA;    #{Computer.location_owner} = #{Computer}
&#xA;    #{Drive.location_owner} = #{Drive}
&#xA;    #{Inbox.inbox_owner} = #{Inbox}
&#xA;
&#xA;    -- No two emails can have the same content.
&#xA;    no disj e1, e2: Email | {e1.email_content = e2.email_content and {e1.email_content + e2.email_content} != none }
&#xA;
&#xA;    -- A item must be in a drive to be in another drive's shared_with_me.
&#xA;    all i: Item | { i in Drive.shared_with_me implies {i.location in Drive}}
&#xA;
&#xA;    -- An item shared with someone must be in that person's drive's shared_with_me.
&#xA;    all i: Item, p: Person | {p in i.shared_with iff {i in ((location_owner.p) &amp; Drive).shared_with_me}}
&#xA;
&#xA;    -- An item NOT shared with someone must NOT be in that person's drive's shared_with_me.
&#xA;    all i: Item, p: Person | {p not in i.shared_with implies {i not in ((location_owner.p) &amp; Drive).shared_with_me}}
&#xA;
&#xA;    -- An item in a folder must inherit the folder's shared_with.
&#xA;    no file: File, folder: Folder | file in folder.folder_items and folder.shared_with not in file.shared_with
&#xA;
&#xA;    -- The email server must be owned by the Server person.
&#xA;    EmailServer in Location implies {EmailServer.location_owner = Server}
&#xA;
&#xA;    -- An attached item must be on the email server.
&#xA;    all a: Attachment | a.attached.location = EmailServer
&#xA;
&#xA;    -- A linked item must be in a Drive.
&#xA;    all l: Link | l.points_to.location in Drive
&#xA;
&#xA;    -- An email in sent or received must have some content &amp; some &amp;quot;to.&amp;quot;
&#xA;    all e: Email, i: Inbox | (e in i.sent or e in i.received) implies some e.email_content and some e.to
&#xA;
&#xA;    -- All email content must have some associated email.
&#xA;    all ec: EmailContent | some e: Email | e.email_content = ec
&#xA;
&#xA;    -- Server cannot own a Drive, Computer, or Inbox.
&#xA;    no d: Drive | d.location_owner = Server
&#xA;    no c: Computer | c.location_owner = Server
&#xA;    no i: Inbox | i.inbox_owner = Server
&#xA;
&#xA;    -- Every email must have some &amp;quot;from&amp;quot;.
&#xA;    all e: Email | some e.from
&#xA;
&#xA;    -- An email in drafts cannot be in any inbox's sent or received.
&#xA;    all disj i1, i2: Inbox, e: Email | e in i1.drafts implies {
&#xA;        e not in (i2.sent + i2.received + i1.sent + i1.received + i2.drafts)
&#xA;    }
&#xA;}
&#xA;
&#xA;pred ownership {
&#xA;    AliceDrive in Drive implies {AliceDrive.location_owner = Alice}
&#xA;    BobDrive in Drive implies {BobDrive.location_owner = Bob}
&#xA;
&#xA;    AliceComputer in Computer implies {AliceComputer.location_owner = Alice}
&#xA;    BobComputer in Computer implies {BobComputer.location_owner = Bob}
&#xA;
&#xA;    AliceInbox in Inbox implies {AliceInbox.inbox_owner = Alice}
&#xA;    BobInbox in Inbox implies {BobInbox.inbox_owner = Bob}
&#xA;}
&#xA;
&#xA;---------------------- Framing Helpers ----------------------
&#xA;
&#xA;---------------------- Currently Tautologous Helpers ----------------------
&#xA;-- These helpers' predicates are commented about because they are currently tautologous,
&#xA;-- as Person, Location, and Inbox are not var Sigs, and therefore cannot increase
&#xA;-- or decrease in number across states.  If they're made var Sigs, these become relevant.
&#xA;
&#xA;pred nochange_sig_Person {
&#xA;    // Person = Person'
&#xA;    // Person in Person'
&#xA;}
&#xA;
&#xA;pred nochange_sig_Location {
&#xA;    // Location = Location'
&#xA;    // Location in Location'
&#xA;}
&#xA;
&#xA;pred nochange_sig_Inbox {
&#xA;    // Inbox = Inbox'
&#xA;    // Inbox in Inbox'
&#xA;}
&#xA;
&#xA;pred nochange_existing_Files {
&#xA;    Item in Item'
&#xA;    File in File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;}
&#xA;
&#xA;-- No existing item properties change.
&#xA;pred nochange_existing_Item_properties {
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        -- No file properties change.
&#xA;        i.same_content = i.same_content'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;}
&#xA;
&#xA;-- No email contents or their properties change.
&#xA;pred nochange_EmailContents_and_properties {
&#xA;    EmailContent = EmailContent'
&#xA;
&#xA;    Text = Text'
&#xA;
&#xA;    Attachment = Attachment'
&#xA;
&#xA;    Link = Link'
&#xA;
&#xA;    all ec: EmailContent | {
&#xA;        -- No attachment properties change.
&#xA;        ec.attached = ec.attached'
&#xA;
&#xA;        -- No link properties change.
&#xA;        ec.points_to = ec.points_to'
&#xA;    }
&#xA;}
&#xA;
&#xA;-- No emails or their properties change.
&#xA;pred nochange_Emails_and_properties {
&#xA;    Email = Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;
&#xA;        e.to = e.to'
&#xA;
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;}
&#xA;
&#xA;pred nochange_Location_properties {
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        l.location_items = l.location_items'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;    }
&#xA;}
&#xA;
&#xA;-- No items or their properties change.
&#xA;pred nochange_Items_and_properties {
&#xA;    Item = Item'
&#xA;
&#xA;    File = File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        -- No file properties change.
&#xA;        i.same_content = i.same_content'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;}
&#xA;
&#xA;pred nochange_Inbox_properties {
&#xA;    all i: Inbox {
&#xA;        i.inbox_owner = i.inbox_owner'
&#xA;
&#xA;        i.received = i.received'
&#xA;
&#xA;        i.sent = i.sent'
&#xA;
&#xA;        i.drafts = i.drafts'
&#xA;
&#xA;        i.threads = i.threads'
&#xA;    }
&#xA;}
&#xA;
&#xA;------------------------ Transitions ------------------------
&#xA;
&#xA;pred doNothing {
&#xA;    -- Guard(s):
&#xA;    // -- This should only run when the model is in its final state.
&#xA;    finalState
&#xA;
&#xA;    -- Action(s):
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    nochange_Items_and_properties
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred createFile[actor: Person, loc: Location] {
&#xA;    -- Guard(s):
&#xA;    -- The actor must own the location.
&#xA;    loc.location_owner = actor
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new file.
&#xA;    some f: File' - File {
&#xA;        -- No other items change.
&#xA;        Item' = Item + f
&#xA;
&#xA;        File' = File + f
&#xA;
&#xA;        Folder = Folder'
&#xA;
&#xA;        -- Set the new file's location to the given location.
&#xA;        f.location' = loc
&#xA;
&#xA;        -- Set the new file's creator and owner.
&#xA;        f.item_owner' = actor
&#xA;        f.item_creator' = actor
&#xA;
&#xA;        -- Ensure the new file isn't shared with anyone.
&#xA;        no f.shared_with'
&#xA;
&#xA;        -- Ensure the new content doesn't have any same_content.
&#xA;        no f.same_content'
&#xA;
&#xA;        -- Ensure loc only gains the one new file.
&#xA;        loc.location_items' = loc.location_items + f
&#xA;    }
&#xA;
&#xA;    -- No existing item properties change.
&#xA;    nochange_existing_Item_properties
&#xA;
&#xA;    -- No existing locations or their properties change,
&#xA;    -- except for loc.location_items.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;    }
&#xA;
&#xA;    all l: (Location - loc) | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred createFolder[actor: Person, loc: Location] {
&#xA;    -- Guard(s):
&#xA;    -- The actor must own the location.
&#xA;    loc.location_owner = actor
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new folder.
&#xA;    some f: Folder' - Folder | {
&#xA;        -- No other items change.
&#xA;        Item' = Item + f
&#xA;
&#xA;        File = File'
&#xA;
&#xA;        Folder' = Folder + f
&#xA;
&#xA;        -- Set the new folder's location to the given location.
&#xA;        f.location' = loc
&#xA;
&#xA;        -- Set the new folder's creator and owner.
&#xA;        f.item_owner' = actor
&#xA;        f.item_creator' = actor
&#xA;
&#xA;        -- Ensure the new folder isn't shared with anyone.
&#xA;        no f.shared_with'
&#xA;
&#xA;        -- Ensure the new folder has no items in it.
&#xA;        no f.folder_items'
&#xA;
&#xA;        -- Ensure loc only gains the one new folder.
&#xA;        loc.location_items' = loc.location_items + f
&#xA;    }
&#xA;
&#xA;    -- No existing item properties change.
&#xA;    nochange_existing_Item_properties
&#xA;
&#xA;    -- No existing locations or their properties change,
&#xA;    -- except for loc.location_items.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;    }
&#xA;
&#xA;    all l: (Location - loc) | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred moveItem[actor: Person, moved: File, destination: Folder] {
&#xA;    -- Guard(s):
&#xA;    -- There can only be one moved file.
&#xA;    one moved
&#xA;    one destination
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- The items must not be on the EmailServer.
&#xA;    moved.location != EmailServer
&#xA;
&#xA;    -- The actor must own the item to be moved and the destination folder.
&#xA;    moved.item_owner = actor
&#xA;    destination.item_owner = actor
&#xA;
&#xA;    -- The moved item cannot already be in the destination folder.
&#xA;    moved not in destination.folder_items
&#xA;
&#xA;    -- The moved item and destination folder must have the same location.
&#xA;    moved.location = destination.location
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Move the item into the destination folder's items.
&#xA;    destination.folder_items' = destination.folder_items + moved
&#xA;
&#xA;    -- If the item is currently in any folder, remove it from that folder's items.
&#xA;    all f: (Folder - destination) | (f.folder_items' = f.folder_items - moved and f.folder_items' in f.folder_items)
&#xA;
&#xA;    -- Reinforce that only one file moves.
&#xA;    one folder_items' - folder_items
&#xA;
&#xA;    -- Reinforce that the moved file only goes to one folder.
&#xA;    one f: Folder | moved in f.folder_items'
&#xA;    no f: Folder - destination | moved in f.folder_items'
&#xA;
&#xA;    -- Update shared_with for the moved item to include those of the destination if not already included.
&#xA;    moved.shared_with' = moved.shared_with + (destination.shared_with - moved.item_owner)
&#xA;
&#xA;    all i: Item - moved | {
&#xA;        i.shared_with' = i.shared_with
&#xA;    }
&#xA;
&#xA;    -- Update the shared_with_me for all drives of persons who are now sharing the moved item,
&#xA;    -- otherwise they remain the same.
&#xA;    all d: Drive | destination in d.shared_with_me =&amp;gt; d.shared_with_me' = d.shared_with_me + moved else {
&#xA;        d.shared_with_me' = d.shared_with_me
&#xA;    }
&#xA;
&#xA;    shared_with_me in shared_with_me'
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change,
&#xA;    -- except drive shared_with_me.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No items or their properties change, except moved's shared_with (above).
&#xA;    Item = Item'
&#xA;    File = File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        -- No file properties change.
&#xA;        i.same_content = i.same_content'
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred createEmail[actor: Person] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new email.
&#xA;    some e: Email' - Email | {
&#xA;        -- No other emails change.
&#xA;        Email' = Email + e
&#xA;
&#xA;        -- Set the new email's location to the actor's inbox.
&#xA;        e in inbox_owner'.actor.drafts'
&#xA;
&#xA;        -- Ensure the email's location's drafts only gains the one new email.
&#xA;        inbox_owner'.actor.drafts' = inbox_owner'.actor.drafts + e
&#xA;
&#xA;        -- Set the new email's from field to actor.
&#xA;        e.from' = actor
&#xA;
&#xA;        -- Ensure the new email has no &amp;quot;to&amp;quot; field or content.
&#xA;        no e.to'
&#xA;        no e.email_content'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    nochange_Items_and_properties
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No existing emails or their properties change.
&#xA;    Email in Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;
&#xA;        e.to = e.to'
&#xA;
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;
&#xA;    -- No inboxes or their properties change, except the actor's drafts.
&#xA;    nochange_sig_Inbox
&#xA;
&#xA;    all i: Inbox {
&#xA;        i.inbox_owner = i.inbox_owner'
&#xA;
&#xA;        i.received = i.received'
&#xA;
&#xA;        i.sent = i.sent'
&#xA;
&#xA;        i.threads = i.threads'
&#xA;    }
&#xA;
&#xA;    all i: (Inbox - inbox_owner'.actor) | {
&#xA;        i.drafts = i.drafts'
&#xA;    }
&#xA;}
&#xA;
&#xA;pred setRecipients[actor: Person, email: Email, recipients: Person] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Server cannot be in recipients.
&#xA;    Server not in recipients
&#xA;
&#xA;    -- The email must still be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The email's to cannot already be recipients.
&#xA;    email.to != recipients
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Set the specified email's recipients.
&#xA;    email.to' = recipients
&#xA;
&#xA;    -- No existing emails or their properties change, except the specified email's to.
&#xA;    Email = Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;
&#xA;    all e: (Email - email) | {
&#xA;        e.to = e.to'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    nochange_Items_and_properties
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred removeRecipients[actor: Person, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Some email recipients must already exist.
&#xA;    some email.to
&#xA;
&#xA;    -- The email must still be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Set the specified email's recipients to none.
&#xA;    email.to' = none
&#xA;
&#xA;    -- No emails or their properties change, except the specified email's to.
&#xA;    Email = Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;
&#xA;        e.email_content = e.email_content'
&#xA;        e.email_content in e.email_content'
&#xA;    }
&#xA;
&#xA;    all e: (Email - email) | {
&#xA;        e.to = e.to'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    nochange_Items_and_properties
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred attachFile[actor: Person, item: File, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- The item to attach must be owned by the actor.
&#xA;    item.item_owner = actor
&#xA;
&#xA;    -- The item to attach must be on the actor's computer.
&#xA;    item.location = location_owner.actor &amp; Computer
&#xA;
&#xA;    -- The email must be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The email must have no existing content.
&#xA;    no email.email_content
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new file and attachment.
&#xA;    some a: Attachment' - Attachment | {
&#xA;        some file: File' - File | {
&#xA;            -- Only this new file is created.
&#xA;            Item' = Item + file
&#xA;
&#xA;            File' = File + file
&#xA;
&#xA;            Folder = Folder'
&#xA;
&#xA;            -- Set the new file's properties.
&#xA;            file.location' = EmailServer
&#xA;            file.item_owner' = Server
&#xA;            file.item_creator' = actor
&#xA;            no file.shared_with'
&#xA;
&#xA;            file.same_content' = (item + item.same_content)
&#xA;            item.same_content' = item.same_content + file
&#xA;
&#xA;            -- Set the same content for all relevant files.
&#xA;            all i: item.same_content | {
&#xA;                i.same_content' = i.same_content + file
&#xA;            }
&#xA;
&#xA;            a.attached' = file
&#xA;            EmailServer.location_items' = EmailServer.location_items + file
&#xA;        }
&#xA;
&#xA;        -- No other email contents change.
&#xA;        EmailContent' = EmailContent + a
&#xA;
&#xA;        Attachment' = Attachment + a
&#xA;
&#xA;        Text = Text'
&#xA;
&#xA;        Link = Link'
&#xA;
&#xA;        -- The attachment must be included in the email.
&#xA;        email.email_content' = a
&#xA;    }
&#xA;
&#xA;    -- No non-related items' same_content changes.
&#xA;    all i: (Item - item) - item.same_content | {
&#xA;        i.same_content = i.same_content'
&#xA;    }
&#xA;
&#xA;    -- No existing email contents or their properties change.
&#xA;    all ec: EmailContent | {
&#xA;        -- No attachment properties change.
&#xA;        ec.attached = ec.attached'
&#xA;
&#xA;        -- No link properties change.
&#xA;        ec.points_to = ec.points_to'
&#xA;    }
&#xA;
&#xA;    -- No emails or their properties change, except for the newly attached e-mail.
&#xA;    Email = Email'
&#xA;    Email in Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;
&#xA;        e.to = e.to'
&#xA;    }
&#xA;
&#xA;    all e: (Email - email) | {
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;
&#xA;    -- All location_items other than the email server's remain the same.
&#xA;    all l: Location - EmailServer | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;
&#xA;        -- No existing items are removed.
&#xA;        l.location_items in l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No existing items or their properties change.
&#xA;    Item in Item'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        i.same_content in i.same_content'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred attachFolder[actor: Person, item: Folder, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- The item to attach must be owned by the actor.
&#xA;    item.item_owner = actor
&#xA;
&#xA;    -- The item to attach must be on the actor's computer.
&#xA;    item.location = location_owner.actor &amp; Computer
&#xA;
&#xA;    -- The email must be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The email must have no existing content.
&#xA;    no email.email_content
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new file and attachment.
&#xA;    some a: Attachment' - Attachment | {
&#xA;        some folder: Folder' - Folder | {
&#xA;            -- Only this new folder is created.
&#xA;            Folder' = Folder + folder
&#xA;            folder.location' = EmailServer
&#xA;            folder.item_owner' = Server
&#xA;            folder.item_creator' = actor
&#xA;            no folder.shared_with'
&#xA;
&#xA;            a.attached' = folder
&#xA;
&#xA;            let cloned_files = { cloned: File' | cloned not in File and cloned in File' - File } | {
&#xA;                #{cloned_files} = #{item.folder_items}
&#xA;                cloned_files = folder.folder_items'
&#xA;
&#xA;                -- Only these new files are created.
&#xA;                File' = File + cloned_files
&#xA;
&#xA;                cloned_files.location' = EmailServer
&#xA;                cloned_files.item_owner' = Server
&#xA;                cloned_files.item_creator' = actor
&#xA;                no cloned_files.shared_with'
&#xA;
&#xA;                EmailServer.location_items' = EmailServer.location_items + folder + cloned_files
&#xA;
&#xA;                all orig: item.folder_items | one clone: cloned_files | {
&#xA;                    clone.same_content' = (orig + orig.same_content)  -- Mapping same_content individually.
&#xA;                    orig.same_content' = orig.same_content + clone
&#xA;
&#xA;                    all i: orig.same_content | {
&#xA;                        i.same_content' = i.same_content + clone
&#xA;                    }
&#xA;                }
&#xA;            }
&#xA;        }
&#xA;
&#xA;        -- No other email contents change.
&#xA;        EmailContent' = EmailContent + a
&#xA;
&#xA;        Attachment' = Attachment + a
&#xA;
&#xA;        Text = Text'
&#xA;
&#xA;        Link = Link'
&#xA;
&#xA;        -- The attachment must be included in the email.
&#xA;        email.email_content' = a
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change,
&#xA;    -- except for the newly created one.
&#xA;
&#xA;    all ec: EmailContent | {
&#xA;        -- No attachment properties change.
&#xA;        ec.attached = ec.attached'
&#xA;
&#xA;        -- No link properties change.
&#xA;        ec.points_to = ec.points_to'
&#xA;
&#xA;    }
&#xA;
&#xA;    -- No emails or their properties change,
&#xA;    -- except for the newly attached e-mail.
&#xA;    Email = Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;
&#xA;        e.to = e.to'
&#xA;    }
&#xA;
&#xA;    all e: (Email - email) | {
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;
&#xA;    all l: Location - EmailServer | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;
&#xA;        -- No existing items are removed.
&#xA;        l.location_items in l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    Item in Item'
&#xA;
&#xA;    all i: (Item - item.folder_items) - item.folder_items.same_content | {
&#xA;        i.same_content = i.same_content'
&#xA;    }
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        i.same_content in i.same_content'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred addText[actor: Person, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;
&#xA;    -- The email must be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The email must have no existing content.
&#xA;    no email.email_content
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new email text.
&#xA;    one t: Text' - Text | {
&#xA;        -- No other email contents change.
&#xA;        EmailContent' = EmailContent + t
&#xA;        Text' = Text + t
&#xA;
&#xA;        -- The text must be included in the email.
&#xA;        email.email_content' = t
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change,
&#xA;    -- except for the newly created one.
&#xA;    EmailContent in EmailContent'
&#xA;
&#xA;    Attachment = Attachment'
&#xA;
&#xA;    Link = Link'
&#xA;
&#xA;    all ec: EmailContent | {
&#xA;        -- No attachment properties change.
&#xA;        ec.attached = ec.attached'
&#xA;
&#xA;        -- No link properties change.
&#xA;        ec.points_to = ec.points_to'
&#xA;    }
&#xA;
&#xA;    -- No emails or their properties change,
&#xA;    -- except for the newly attached e-mail.
&#xA;    Email = Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;        e.to = e.to'
&#xA;    }
&#xA;
&#xA;    all e: (Email - email) | {
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    nochange_Items_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred addLink[actor: Person, item: Item, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;
&#xA;    -- The email must be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The email must have no existing content.
&#xA;    no email.email_content
&#xA;
&#xA;    -- The item must be owned by or shared with the actor.
&#xA;    (item.location = location_owner.actor &amp; Drive) or
&#xA;    (actor in item.shared_with)
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new email text.
&#xA;    some l: Link' - Link | {
&#xA;        -- No other email contents change.
&#xA;        EmailContent' = EmailContent + l
&#xA;        EmailContent in EmailContent'
&#xA;
&#xA;        Link' = Link + l
&#xA;
&#xA;        -- The text must be included in the email.
&#xA;        email.email_content' = l
&#xA;
&#xA;        l.points_to' = item
&#xA;    }
&#xA;
&#xA;    Text = Text'
&#xA;
&#xA;    Attachment = Attachment'
&#xA;
&#xA;    -- No email contents or their properties change,
&#xA;    -- except for the newly created one.
&#xA;    all ec: EmailContent | {
&#xA;        -- No attachment properties change.
&#xA;        ec.attached = ec.attached'
&#xA;
&#xA;        -- No link properties change.
&#xA;        ec.points_to = ec.points_to'
&#xA;    }
&#xA;
&#xA;    -- No emails or their properties change,
&#xA;    -- except for the newly attached e-mail.
&#xA;    Email = Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;        e.to = e.to'
&#xA;    }
&#xA;
&#xA;    all e: (Email - email) | {
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    nochange_Items_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred removeEmailContent[actor: Person, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;
&#xA;    -- The email must be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The email must have some existing content.
&#xA;    some email.email_content
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Specify there's no email content.
&#xA;    no email.email_content'
&#xA;
&#xA;    -- Only email's email content is removed.
&#xA;    EmailContent' = EmailContent - email.email_content
&#xA;
&#xA;    Attachment' = Attachment - email.email_content
&#xA;
&#xA;    Link' = Link - email.email_content
&#xA;    Link' in Link
&#xA;
&#xA;    Text' = Text - email.email_content
&#xA;
&#xA;    all ec: EmailContent' | {
&#xA;        -- No other attachment properties change.
&#xA;        ec.attached = ec.attached'
&#xA;
&#xA;        -- No other link properties change.
&#xA;        ec.points_to = ec.points_to'
&#xA;    }
&#xA;
&#xA;    all e: (Email - email) | {
&#xA;        e.email_content = e.email_content'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    nochange_Items_and_properties
&#xA;
&#xA;    -- No emails or their to/from change.
&#xA;    Email = Email'
&#xA;
&#xA;    all e: Email | {
&#xA;        e.from = e.from'
&#xA;        e.to = e.to'
&#xA;    }
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;fun linkFiles[email: Email]: Item { email.email_content.points_to + email.email_content.points_to.folder_items }
&#xA;
&#xA;pred sendEmail[actor: Person, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;
&#xA;    -- The email must still be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The email's must have some sender, recipients, and content.
&#xA;    some email.to
&#xA;    some email.from
&#xA;    some email.email_content
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Email moves to sender's sent &amp; recipients' received.
&#xA;    inbox_owner.actor.sent in inbox_owner.actor.sent'
&#xA;    inbox_owner.actor.sent' = inbox_owner.actor.sent + email
&#xA;
&#xA;    all r: email.to | inbox_owner.r.received in inbox_owner.r.received'
&#xA;    all r: email.to | inbox_owner.r.received' = inbox_owner.r.received + email
&#xA;
&#xA;    -- Email is no longer in the actor's drafts.
&#xA;   (inbox_owner.actor).drafts' in (inbox_owner.actor).drafts
&#xA;   (inbox_owner.actor).drafts' = (inbox_owner.actor).drafts - email
&#xA;
&#xA;    -- No inboxes change.
&#xA;    nochange_sig_Inbox
&#xA;
&#xA;    -- No inbox ownerships or threads change (threads are updated via sendReply).
&#xA;    all i: Inbox | {
&#xA;        i.inbox_owner = i.inbox_owner'
&#xA;
&#xA;        i.threads = i.threads'
&#xA;    }
&#xA;
&#xA;    // -- No inbox sent or drafts are changed except for the actor's.
&#xA;    all i: Inbox - (inbox_owner.actor) | {
&#xA;        i.sent = i.sent'
&#xA;
&#xA;        i.drafts = i.drafts'
&#xA;    }
&#xA;
&#xA;    // -- No inbox receiveds change except for the email recipients.
&#xA;    all r: email.to | all i: Inbox - inbox_owner.r | {
&#xA;        i.received = i.received'
&#xA;    }
&#xA;
&#xA;    -- If email content is a link, share the item(s) it points to with recipients.
&#xA;    all i: (linkFiles[email]) | {
&#xA;        i.shared_with' = i.shared_with + (email.to - i.item_owner)
&#xA;    }
&#xA;
&#xA;    all i: (Item - linkFiles[email]) | {
&#xA;        i.shared_with = i.shared_with'
&#xA;    }
&#xA;
&#xA;    -- And update shared_with_me.
&#xA;    all d: Drive | d.shared_with_me in d.shared_with_me'
&#xA;
&#xA;    all d: (location_owner.(email.to) &amp; Drive) | {
&#xA;        d.shared_with_me' = d.shared_with_me + (linkFiles[email] - d.location_items)
&#xA;    }
&#xA;
&#xA;    all d: (Drive - (location_owner.(email.to) &amp; Drive)) | { d.shared_with_me' = d.shared_with_me }
&#xA;
&#xA;   -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change,
&#xA;    -- except the to drives' shared_with_me
&#xA;    -- and the email map.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No items or their properties change,
&#xA;    -- except the shared item(s)' shared_with.
&#xA;    Item = Item'
&#xA;
&#xA;    File = File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with in i.shared_with'
&#xA;
&#xA;        -- No file properties change.
&#xA;        i.same_content = i.same_content'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;}
&#xA;
&#xA;pred sendReply[actor: Person, email: Email, reply_to: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- The email must still be in the actor's drafts.
&#xA;    email in inbox_owner.actor.drafts
&#xA;
&#xA;    -- The reply_to must be in the actor's received.
&#xA;    reply_to in inbox_owner.actor.received
&#xA;
&#xA;    -- The email's to must have some overlap with reply_to's from.
&#xA;    all r: email.to | r in reply_to.from
&#xA;
&#xA;    -- The email's must have some sender, recipients, and content.
&#xA;    some email.to
&#xA;    some email.from
&#xA;    some email.email_content
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Email moves to sender's sent &amp; recipients' received.
&#xA;    inbox_owner.actor.sent in inbox_owner.actor.sent'
&#xA;    inbox_owner.actor.sent' = inbox_owner.actor.sent + email
&#xA;
&#xA;    all r: email.to | inbox_owner.r.received in inbox_owner.r.received'
&#xA;    all r: email.to | inbox_owner.r.received' = inbox_owner.r.received + email
&#xA;
&#xA;    -- Creates thread links in sender and recipients' mailbox.
&#xA;    inbox_owner.actor.threads in inbox_owner.actor.threads'
&#xA;    inbox_owner.actor.threads' = inbox_owner.actor.threads + email-&amp;gt;reply_to
&#xA;
&#xA;    all r: email.to | inbox_owner.r.threads in inbox_owner.r.threads'
&#xA;    all r: email.to | inbox_owner.r.threads' = inbox_owner.r.threads + email-&amp;gt;reply_to
&#xA;
&#xA;    -- Email is no longer in the actor's drafts.
&#xA;   (inbox_owner.actor).drafts' in (inbox_owner.actor).drafts
&#xA;   (inbox_owner.actor).drafts' = (inbox_owner.actor).drafts - email
&#xA;
&#xA;    -- No inboxes change.
&#xA;    nochange_sig_Inbox
&#xA;
&#xA;    -- No inbox ownerships changes.
&#xA;    all i: Inbox | {
&#xA;        i.inbox_owner = i.inbox_owner'
&#xA;        i.inbox_owner in i.inbox_owner'
&#xA;    }
&#xA;
&#xA;    -- No threads change for anyone other than sender and recipients.
&#xA;    all r: email.to | all i: ((Inbox - inbox_owner.r) - (inbox_owner.actor)) | {
&#xA;        i.threads = i.threads'
&#xA;    }
&#xA;
&#xA;    -- No inbox sent or drafts are changed except for the actor's.
&#xA;    all i: Inbox - (inbox_owner.actor) | {
&#xA;        i.sent = i.sent'
&#xA;
&#xA;        i.drafts = i.drafts'
&#xA;    }
&#xA;
&#xA;    -- No inbox receiveds change except for the email recipients.
&#xA;    all r: email.to | all i: Inbox - inbox_owner.r | {
&#xA;        i.received = i.received'
&#xA;    }
&#xA;
&#xA;    -- If email content is a link, share the item(s) it points to with recipients.
&#xA;    all i: (linkFiles[email]) | {
&#xA;        i.shared_with' = i.shared_with + (email.to - i.item_owner)
&#xA;    }
&#xA;
&#xA;    all i: (Item - linkFiles[email]) | {
&#xA;        i.shared_with = i.shared_with'
&#xA;    }
&#xA;
&#xA;    -- And update shared_with_me.
&#xA;    all d: Drive | d.shared_with_me in d.shared_with_me'
&#xA;
&#xA;    all d: (location_owner.(email.to) &amp; Drive) | {
&#xA;        d.shared_with_me' = d.shared_with_me + (linkFiles[email] - d.location_items)
&#xA;    }
&#xA;
&#xA;    all d: (Drive - (location_owner.(email.to) &amp; Drive)) | { d.shared_with_me' = d.shared_with_me }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change,
&#xA;    -- except the to drives' shared_with_me
&#xA;    -- and the email map.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No items or their properties change,
&#xA;    -- except the shared item(s)' shared_with.
&#xA;    Item = Item'
&#xA;
&#xA;    File = File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with in i.shared_with'
&#xA;
&#xA;        -- No file properties change.
&#xA;        i.same_content = i.same_content'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;}
&#xA;
&#xA;pred editFile[actor: Person, file: File] {
&#xA;    -- Guard(s):
&#xA;    -- The item must be owned by or shared with the actor.
&#xA;    (file.location in location_owner.actor) or (actor in file.shared_with)
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- The file loses all its same_contents.
&#xA;    no file.same_content'
&#xA;
&#xA;    all i: Item - file | i.same_content' = i.same_content - file
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;    nochange_Location_properties
&#xA;
&#xA;    -- No items or their properties change.
&#xA;    Item = Item'
&#xA;
&#xA;    File = File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred downloadFileAttachment[actor: Person, email: Email] {
&#xA;    -- Guard(s):
&#xA;    -- The email must be in the actor's draft, sent, or received.
&#xA;    email in inbox_owner.actor.drafts or
&#xA;    email in inbox_owner.actor.received or
&#xA;    email in inbox_owner.actor.sent
&#xA;
&#xA;    -- The email must have a file attachment.
&#xA;    email.email_content in Attachment
&#xA;    email.email_content.attached in File
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new file on the actor's computer.
&#xA;    some f: File' - File {
&#xA;        -- Only one new item is created.
&#xA;        File' = File + f
&#xA;
&#xA;        -- Set the new file's location to the actor's computer.
&#xA;        f.location' = (location_owner.actor &amp; Computer)
&#xA;
&#xA;        -- The computer gains no new items.
&#xA;        (location_owner.actor &amp; Computer).location_items in (location_owner.actor &amp; Computer).location_items'
&#xA;        (location_owner.actor &amp; Computer).location_items' = (location_owner.actor &amp; Computer).location_items + f
&#xA;
&#xA;        -- Set the new file's creator and owner.
&#xA;        f.item_owner' = actor
&#xA;        f.item_creator' = email.email_content.attached.item_creator
&#xA;
&#xA;        -- Ensure the new file isn't shared with anyone.
&#xA;        no f.shared_with'
&#xA;
&#xA;        -- Set all new same_content relations.
&#xA;        f.same_content' = email.email_content.attached + email.email_content.attached.same_content
&#xA;
&#xA;        email.email_content.attached.same_content' = email.email_content.attached.same_content + f
&#xA;        email.email_content.attached.same_content in email.email_content.attached.same_content'
&#xA;
&#xA;        all i: email.email_content.attached.same_content | {
&#xA;            i.same_content' = i.same_content + f
&#xA;        }
&#xA;    }
&#xA;
&#xA;    -- No non-related items' same_content changes.
&#xA;    all i: (Item - (email.email_content.attached)) - email.email_content.attached.same_content | {
&#xA;        i.same_content = i.same_content'
&#xA;    }
&#xA;
&#xA;    -- No location items other than the actor's computer's change.
&#xA;    all l: Location - (location_owner.actor &amp; Computer) | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;    }
&#xA;
&#xA;    -- No existing items or their properties change.
&#xA;    nochange_existing_Files
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred downloadDriveFile[actor: Person, file: File] {
&#xA;    -- Guard(s):
&#xA;    -- The file must be in the actor's Drive or shared_with_me.
&#xA;    file in (location_owner.actor &amp; Drive).location_items or
&#xA;    file in (location_owner.actor &amp; Drive).shared_with_me
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new file on the actor's computer.
&#xA;    some f: File' - File {
&#xA;        -- Only one new item is created.
&#xA;        File' = File + f
&#xA;
&#xA;        -- Set the new file's location to the actor's computer.
&#xA;        f.location' = (location_owner.actor &amp; Computer)
&#xA;
&#xA;        -- The computer gains no new items.
&#xA;        (location_owner.actor &amp; Computer).location_items in (location_owner.actor &amp; Computer).location_items'
&#xA;        (location_owner.actor &amp; Computer).location_items' = (location_owner.actor &amp; Computer).location_items + f
&#xA;
&#xA;        -- Set the new file's creator and owner.
&#xA;        f.item_owner' = actor
&#xA;        f.item_creator' = file.item_creator
&#xA;
&#xA;        -- Ensure the new file isn't shared with anyone.
&#xA;        no f.shared_with'
&#xA;
&#xA;        -- Set all new same_content relations.
&#xA;        f.same_content' = file + file.same_content
&#xA;
&#xA;        file.same_content' = file.same_content + f
&#xA;
&#xA;        all i: file.same_content | {
&#xA;            i.same_content' = i.same_content + f
&#xA;        }
&#xA;    }
&#xA;
&#xA;    -- No non-related items' same_content changes.
&#xA;    all i: (Item - (file)) - file.same_content | {
&#xA;        i.same_content = i.same_content'
&#xA;    }
&#xA;
&#xA;    -- No location items other than the actor's computer's change.
&#xA;    all l: Location - (location_owner.actor &amp; Computer) | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;    }
&#xA;
&#xA;    -- No existing items or their properties change.
&#xA;    Item in Item'
&#xA;
&#xA;    File in File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred uploadFileToDrive[actor: Person, file: File] {
&#xA;    -- Guard(s):
&#xA;    -- The file must be on the actor's computer.
&#xA;    file in (location_owner.actor &amp; Computer).location_items
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new file on the actor's drive.
&#xA;    some f: File' - File {
&#xA;        -- Only one new item is created.
&#xA;        File' = File + f
&#xA;
&#xA;        -- Set the new file's location to the actor's drive.
&#xA;        f.location' = (location_owner.actor &amp; Drive)
&#xA;
&#xA;        -- The drive gains no new items.
&#xA;        (location_owner.actor &amp; Drive).location_items in (location_owner.actor &amp; Drive).location_items'
&#xA;        (location_owner.actor &amp; Drive).location_items' = (location_owner.actor &amp; Drive).location_items + f
&#xA;
&#xA;        -- Set the new file's creator and owner.
&#xA;        f.item_owner' = actor
&#xA;        f.item_creator' = file.item_creator
&#xA;
&#xA;        -- Ensure the new file isn't shared with anyone.
&#xA;        no f.shared_with'
&#xA;
&#xA;        -- Set all new same_content relations.
&#xA;        f.same_content' = file + file.same_content
&#xA;
&#xA;        file.same_content' = file.same_content + f
&#xA;
&#xA;        all i: file.same_content | {
&#xA;            i.same_content' = i.same_content + f
&#xA;        }
&#xA;    }
&#xA;
&#xA;    -- No non-related items' same_content changes.
&#xA;    all i: (Item - (file)) - file.same_content | {
&#xA;        i.same_content = i.same_content'
&#xA;    }
&#xA;
&#xA;    -- No location items other than the actor's drive's change.
&#xA;    all l: Location - (location_owner.actor &amp; Drive) | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;    }
&#xA;
&#xA;    -- No existing items or their properties change.
&#xA;    Item in Item'
&#xA;
&#xA;    File in File'
&#xA;
&#xA;    Folder = Folder'
&#xA;
&#xA;    all i: Item | {
&#xA;        i.item_creator = i.item_creator'
&#xA;
&#xA;        i.item_owner = i.item_owner'
&#xA;
&#xA;        i.location = i.location'
&#xA;
&#xA;        i.shared_with = i.shared_with'
&#xA;
&#xA;        -- No folder properties change.
&#xA;        i.folder_items = i.folder_items'
&#xA;    }
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;pred duplicateFile[actor: Person, file: File] {
&#xA;    -- Guard(s):
&#xA;    -- The file must be owned by or shared with the actor.
&#xA;    file in (location_owner.actor).location_items or
&#xA;    file in (location_owner.actor &amp; Drive).shared_with_me
&#xA;
&#xA;    -- The actor cannot be server.
&#xA;    actor != Server
&#xA;
&#xA;    -- Action(s):
&#xA;    -- Create a new file on the actor's drive.
&#xA;    some f: File' - File {
&#xA;        -- Only one new item is created.
&#xA;        File' = File + f
&#xA;
&#xA;        -- Set the new file's location to the same as the file being duplicated.
&#xA;        f.location' = file.location
&#xA;
&#xA;        -- The drive gains no new items.
&#xA;        file.location.location_items in file.location.location_items'
&#xA;        file.location.location_items' = file.location.location_items + f
&#xA;
&#xA;        -- Set the new file's creator and owner.
&#xA;        f.item_owner' = actor
&#xA;        f.item_creator' = actor
&#xA;
&#xA;        -- Ensure the new file isn't shared with anyone.
&#xA;        no f.shared_with'
&#xA;
&#xA;        -- Set all new same_content relations.
&#xA;        f.same_content' = file + file.same_content
&#xA;
&#xA;        file.same_content' = file.same_content + f
&#xA;
&#xA;        all i: file.same_content | {
&#xA;            i.same_content' = i.same_content + f
&#xA;        }
&#xA;    }
&#xA;
&#xA;    -- No non-related items' same_content changes.
&#xA;    all i: (Item - (file)) - file.same_content | {
&#xA;        i.same_content = i.same_content'
&#xA;    }
&#xA;
&#xA;    -- No location items other than the actor's drive's change.
&#xA;    all l: Location - file.location | {
&#xA;        l.location_items = l.location_items'
&#xA;    }
&#xA;
&#xA;    -- No persons change.
&#xA;    nochange_sig_Person
&#xA;
&#xA;    -- No locations or their properties change.
&#xA;    nochange_sig_Location
&#xA;
&#xA;    all l: Location | {
&#xA;        l.location_owner = l.location_owner'
&#xA;
&#xA;        -- No drive properties change.
&#xA;        l.shared_with_me = l.shared_with_me'
&#xA;    }
&#xA;
&#xA;    -- No existing items or their properties change.
&#xA;    nochange_existing_Files
&#xA;
&#xA;    -- No email contents or their properties change.
&#xA;    nochange_EmailContents_and_properties
&#xA;
&#xA;    -- No emails or their properties change.
&#xA;    nochange_Emails_and_properties
&#xA;
&#xA;    -- No inboxes or their properties change.
&#xA;    nochange_sig_Inbox
&#xA;    nochange_Inbox_properties
&#xA;}
&#xA;
&#xA;------------------------ Example States ------------------------
&#xA;
&#xA;pred noItemsOrEmails {
&#xA;    no Item
&#xA;    no Email
&#xA;    no EmailContent
&#xA;}
&#xA;
&#xA;pred aliceCreatedComputerFile {
&#xA;	some f: File | {
&#xA;		f.item_owner = Alice
&#xA;		f.item_creator = Alice
&#xA;		f.location = AliceComputer
&#xA;		no f.shared_with
&#xA;	}
&#xA;
&#xA;    no Email
&#xA;    no same_content
&#xA;}
&#xA;
&#xA;pred aliceUploadedFile {
&#xA;	some disj f1, f2: File | {
&#xA;		f1.item_owner = Alice
&#xA;		f1.location = AliceComputer
&#xA;
&#xA;		f2.item_owner = Alice
&#xA;		f2.location = AliceDrive
&#xA;
&#xA;		f2 in f1.same_content
&#xA;	}
&#xA;
&#xA;    no Email
&#xA;}
&#xA;
&#xA;pred aliceFileSharedWithBob {
&#xA;	some f: File, l: Link, e: Email | {
&#xA;		f.item_owner = Alice
&#xA;		f.location = AliceDrive
&#xA;		Bob in f.shared_with
&#xA;		f in BobDrive.shared_with_me
&#xA;
&#xA;		e in AliceInbox.sent
&#xA;		e.from = Alice
&#xA;		e.to = Bob
&#xA;		e.email_content = l
&#xA;		l.points_to = f
&#xA;	}
&#xA;}
&#xA;
&#xA;pred twoFilesInFolder {
&#xA;    some disj f1, f2: File, fold: Folder | {
&#xA;        f1 in fold.folder_items
&#xA;        f2 in fold.folder_items
&#xA;    }
&#xA;}
&#xA;
&#xA;pred fileInBobDrive {
&#xA;    some f: File | f in BobDrive.location_items
&#xA;
&#xA;}
&#xA;
&#xA;pred emailSentWithAttachment {
&#xA;    some e: Email | {
&#xA;        some e.to
&#xA;        some e.from
&#xA;        some e.email_content
&#xA;        e.email_content in Attachment
&#xA;        some f: Folder | {
&#xA;            some f.folder_items
&#xA;            e.email_content.attached = f
&#xA;        }
&#xA;    }
&#xA;
&#xA;    some sent
&#xA;}
&#xA;
&#xA;pred someSharedFile {
&#xA;    some shared_with_me
&#xA;}
&#xA;
&#xA;pred editsMade {
&#xA;    eventually { some same_content and eventually { no same_content } }
&#xA;}
&#xA;
&#xA;pred recipientsAndNoLink {
&#xA;    some e: Email | {
&#xA;        some e.to
&#xA;        no e.email_content
&#xA;    }
&#xA;}
&#xA;
&#xA;pred allTransitions {
&#xA;    always {
&#xA;        doNothing or {
&#xA;            some p: (Person - Server), l: Location | { createFile[p, l] }
&#xA;        } or {
&#xA;            some p: (Person - Server), l: Location | { createFolder[p, l] }
&#xA;        } or {
&#xA;            some p: Person, m: File, d: Folder | { moveItem[p, m, d] }
&#xA;        } or {
&#xA;            some p: Person | { createEmail[p] }
&#xA;        } or {
&#xA;            some p, r: Person, e: Email | { setRecipients[p, e, r] }
&#xA;        } or {
&#xA;            some p: Person, i: Item, e: Email | { addLink[p, i, e] }
&#xA;        } or {
&#xA;            some p: Person, e: Email | { sendEmail[p, e] }
&#xA;        } or {
&#xA;            some p: Person, a: File, e: Email | { attachFile[p, a, e] }
&#xA;        } or {
&#xA;            some p: Person, a: Folder, e: Email | { attachFolder[p, a, e] }
&#xA;        } or {
&#xA;            some p: Person, e: Email | { addText[p, e] }
&#xA;        } or {
&#xA;            some p: Person, f: File | { editFile[p, f] }
&#xA;        } or {
&#xA;            some p: Person, e, r: Email | sendReply[p, e, r]
&#xA;        } or {
&#xA;            some p: Person, e: Email | downloadFileAttachment[p, e]
&#xA;        } or {
&#xA;            some p: Person, f: File | { uploadFileToDrive[p, f] }
&#xA;        } or {
&#xA;            some p: Person, f: File | { downloadDriveFile[p, f] }
&#xA;        } or {
&#xA;            some p: Person, f: File | { duplicateFile[p, f] }
&#xA;        }
&#xA;    }
&#xA;}
&#xA;
&#xA;pred limitedTransitions {
&#xA;    always {
&#xA;        doNothing or {
&#xA;            some p: (Person - Server), l: Location | { createFile[p, l] }
&#xA;        } or {
&#xA;            some p: Person | { createEmail[p] }
&#xA;        } or {
&#xA;            some p, r: Person, e: Email | { setRecipients[p, e, r] }
&#xA;        } or {
&#xA;            some p: Person, i: Item, e: Email | { addLink[p, i, e] }
&#xA;        } or {
&#xA;            some p: Person, e: Email | { sendEmail[p, e] }
&#xA;        } or {
&#xA;            some p: Person, f: File | { uploadFileToDrive[p, f] }
&#xA;        }
&#xA;    }
&#xA;}
&#xA;
&#xA;------------------------ Run Statements ------------------------
&#xA;
&#xA;pred initState {
&#xA;    noItemsOrEmails
&#xA;}
&#xA;
&#xA;pred midStates {
&#xA;    eventually {
&#xA;        aliceCreatedComputerFile and eventually {
&#xA;            aliceUploadedFile and eventually {
&#xA;                recipientsAndNoLink
&#xA;            }
&#xA;        }
&#xA;    }
&#xA;}
&#xA;
&#xA;pred finalState {
&#xA;    aliceFileSharedWithBob
&#xA;}
&#xA;
&#xA;pred testTraces {
&#xA;    initState
&#xA;    modelProperties and ownership
&#xA;    limitedTransitions
&#xA;    eventually {midStates}
&#xA;    eventually {always {finalState}}
&#xA;}
&#xA;
&#xA;run {
&#xA;    testTraces
&#xA;} for exactly 3 Person, -- Should be at least 3 to exercise full functionality (Sender, Server, Recipient).
&#xA;    exactly 5 Location,
&#xA;    exactly 2 Drive, -- MUST correspond to the # of Persons.
&#xA;    exactly 2 Computer, -- MUST correspond to the # of Persons.
&#xA;    exactly 1 EmailServer, -- MUST be exactly 1.
&#xA;    exactly 2 Inbox, -- MUST correspond to the # of Persons.
&#xA;    8 Item, 7 File, 1 Folder, -- # Files and # Folders should add up to # Items, but this isn't required.
&#xA;    2 EmailContent, 2 Email -- These should be equal for all emails to be sendable, but this isn't required.
&#xA;"></source>
</alloy>